// <auto-generated />
using System;
using LicenceData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LicenceData.Migrations
{
    [DbContext(typeof(LicenceServicesDataContext))]
    partial class LicenceServicesDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LicenceData.Domain.Entities.LicenceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxReservedLicence")
                        .HasColumnType("integer");

                    b.Property<int>("ModuleLicenceId")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.Property<Guid>("WaiterCreatedId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("WaiterUpdatedId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("AllLicences");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f5264c6-a805-47ed-9052-b9dc461df8db"),
                            CreatedTime = new DateTime(2022, 6, 25, 18, 57, 8, 960, DateTimeKind.Local).AddTicks(9620),
                            IsDeleted = false,
                            MaxReservedLicence = 10,
                            ModuleLicenceId = 5050,
                            OrganizationId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Version = 1,
                            WaiterCreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            WaiterUpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
